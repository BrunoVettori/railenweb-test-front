{"version":3,"file":"ast.js","sources":["../../src/ast.ts"],"sourcesContent":["import * as babel from '@babel/core'\n\nexport type CompileAstFn = (compileOpts: {\n  code: string\n  filename: string\n  getBabelConfig: () => { plugins: Array<any> }\n}) => Promise<{\n  code: string\n  map: any\n}>\n\nexport function compileAst(makeOpts: { root: string }) {\n  return async (opts: {\n    code: string\n    filename: string\n    getBabelConfig: () => { plugins: Array<any> }\n  }): Promise<{\n    code: string\n    map: any\n  }> => {\n    const res = babel.transformSync(opts.code, {\n      plugins: [\n        ['@babel/plugin-syntax-jsx', {}],\n        [\n          '@babel/plugin-syntax-typescript',\n          {\n            isTSX: true,\n          },\n        ],\n        ...opts.getBabelConfig().plugins,\n      ],\n      root: makeOpts.root,\n      filename: opts.filename,\n      sourceMaps: true,\n    })\n\n    if (res?.code) {\n      return {\n        code: res.code,\n        map: res.map,\n      }\n    }\n\n    return {\n      code: opts.code,\n      map: null,\n    }\n  }\n}\n"],"names":[],"mappings":";AAWO,SAAS,WAAW,UAA4B;AACrD,SAAO,OAAO,SAOR;AACJ,UAAM,MAAM,MAAM,cAAc,KAAK,MAAM;AAAA,MACzC,SAAS;AAAA,QACP,CAAC,4BAA4B,CAAA,CAAE;AAAA,QAC/B;AAAA,UACE;AAAA,UACA;AAAA,YACE,OAAO;AAAA,UACT;AAAA,QACF;AAAA,QACA,GAAG,KAAK,eAAA,EAAiB;AAAA,MAC3B;AAAA,MACA,MAAM,SAAS;AAAA,MACf,UAAU,KAAK;AAAA,MACf,YAAY;AAAA,IAAA,CACb;AAED,QAAI,2BAAK,MAAM;AACN,aAAA;AAAA,QACL,MAAM,IAAI;AAAA,QACV,KAAK,IAAI;AAAA,MAAA;AAAA,IAEb;AAEO,WAAA;AAAA,MACL,MAAM,KAAK;AAAA,MACX,KAAK;AAAA,IAAA;AAAA,EACP;AAEJ;"}